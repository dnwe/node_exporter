name: ci
on:
  merge_group:
  push:
    branches:
    - main
    - master
    paths-ignore:
    - '**/*.md'
  pull_request:
    branches:
    - "**"
    paths-ignore:
    - '**/*.md'

env:
  GOLANG_VERSION: '1.22.x'

permissions:
  contents: read  # for actions/checkout to fetch code

jobs:
  build:
    name: Build Binary and Docker Image
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -trimpath
      GOOS: linux
      GOARCH: amd64
    steps:
    - name: Checkout Repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        persist-credentials: false
    - name: Setup Go
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - name: Build Go Binary
      run: go build -o .build/${GOOS}-${GOARCH}/node_exporter
    - name: Setup Docker
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
      id: buildx
    - name: Extract GitHub Metadata for Docker
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
      with:
        images: ${{ github.repository }}
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Docker Image (and push if not PR)
      uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
      with:
        context: .
        file: Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=gha,scope=${{ github.workflow }}
        cache-to: |
          type=gha,scope=${{ github.workflow }},mode=max
  test:
    name: Unit Testing
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -trimpath -tags=nobtrfs
    steps:
    - name: Checkout Repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        persist-credentials: false
    - name: Setup Go
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - name: Test (Unit)
      run: |
        make collector/fixtures/sys/.unpacked collector/fixtures/udev/.unpacked
        go install gotest.tools/gotestsum@latest
        gotestsum --format github-actions --jsonfile test-results/unittests.json --junitfile test-results/unittests.xml -- -coverprofile=coverage.out ./...
    - name: Upload code coverage
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: code-coverage
        path: coverage.out
    - name: Generate test results
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: test-results
        path: test-results/
  lint:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    name: Linting with Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        persist-credentials: false
    - name: Setup Go
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        cache: false # golangci-lint-action has its own cache
        go-version: ${{ env.GOLANG_VERSION }}
    - name: golangci-lint
      env:
        GOFLAGS: -trimpath
      uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804 # v4.0.0
      with:
        version: v1.56.2
